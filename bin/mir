#!/usr/bin/env ruby
require 'gli'
require 'yaml'

begin # XXX: Remove this begin/rescue before distributing your app
require 'mir'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/mir` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/mir now"
  exit 64
end

include GLI::App

program_desc 'Test your Ruby skills! Download Ruby exercises and submit your solutions for grading.'

version Mir::VERSION

desc 'Initialize the current directory as a mir project directory'
skips_pre
command :init do |c|
  c.action do |global_options, options, args|
    Mir::Init.init_project_dir(Dir.pwd)
  end
end

desc 'List the available challenges'
command :list do |c|
  c.action do |global_options,options,args|
    challenges = Mir::Challenge.list(@config)

    if challenges.empty?
      puts "No challenges available."
    else
      challenges.each do |challenge|
        puts "#{challenge[:id]}: #{challenge[:name]}"
      end
    end
  end
end

desc 'Download a challenge'
command :fetch do |c|
  c.action do |global_options, options, args|
    challenge_id = args.first
    challenge = Mir::Challenge.find(@config, challenge_id)
    challenge.download
  end
end

pre do |global,command,options,args|
  @config = Mir::Init.find_config(Dir.pwd)
  !@config.nil?
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
